---
import "../css/blogIndex.css"
---

<button class="toc-toggle" aria-label="Toggle table of contents">
    <i class="fa fa-list-ul toc-toggle-icon toc-icon-open"></i>
    <i class="fa fa-times toc-toggle-icon toc-icon-close"></i>
</button>

<div class="table-of-contents">
    <div class="toc-container">
        <h4 class="toc-title has-text-weight-bold">
            <span>Table of Contents</span>
            <button class="toc-close" aria-label="Close table of contents">
                <i class="fa fa-times"></i>
            </button>
        </h4>
        <nav class="toc-nav">
            <ul id="toc-list" class="toc-list">
            </ul>
        </nav>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tocToggle = document.querySelector('.toc-toggle');
        const tocElement = document.querySelector('.table-of-contents');
        const tocClose = document.querySelector('.toc-close');
        const tocList = document.getElementById('toc-list');
        const blogContent = document.querySelector('.blog-content');
        
        if (!tocList || !blogContent || !tocToggle || !tocElement || !tocClose) return;

        // Toggle functionality
        function toggleToc() {
            const isVisible = tocElement.classList.contains('visible');
            tocElement.classList.toggle('visible', !isVisible);
            tocToggle.classList.toggle('active', !isVisible);
        }

        tocToggle.addEventListener('click', toggleToc);
        tocClose.addEventListener('click', toggleToc);

        // Close on escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && tocElement.classList.contains('visible')) {
                toggleToc();
            }
        });

        // Close when clicking outside (mobile)
        document.addEventListener('click', function(e) {
            if (window.innerWidth <= 768) {
                const clickedElement = e.target as Element;
                if (!tocElement.contains(clickedElement) && !tocToggle.contains(clickedElement)) {
                    if (tocElement.classList.contains('visible')) {
                        toggleToc();
                    }
                }
            }
        });

        // Extract headings from blog content
        const headings = blogContent.querySelectorAll('h1, h2, h3, h4, h5, h6');
        
        if (headings.length === 0) {
            tocToggle.style.display = 'none';
            return;
        }

        // Add Index option at the beginning
        const indexLi = document.createElement('li');
        const indexA = document.createElement('a');
        
        indexA.href = '#';
        indexA.textContent = 'Index';
        indexA.className = 'toc-index';
        
        indexA.addEventListener('click', function(e) {
            e.preventDefault();
            
            // Remove hash and parameters from URL
            const baseUrl = window.location.pathname;
            history.pushState(null, '', baseUrl);
            
            // Scroll to top
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
            
            // Close TOC on mobile after navigation
            if (window.innerWidth <= 768) {
                toggleToc();
            }
        });

        indexLi.appendChild(indexA);
        tocList.appendChild(indexLi);

        // Generate table of contents
        headings.forEach((heading, index) => {
            // Create ID if it doesn't exist
            if (!heading.id) {
                heading.id = `heading-${index}`;
            }

            const li = document.createElement('li');
            const a = document.createElement('a');
            
            a.href = `#${heading.id}`;
            a.textContent = heading.textContent;
            a.className = `toc-${heading.tagName.toLowerCase()}`;
            
            // Smooth scroll behavior
            a.addEventListener('click', function(e) {
                e.preventDefault();
                const headingRect = heading.getBoundingClientRect();
                const offsetTop = window.scrollY + headingRect.top - 80;
                
                window.scrollTo({
                    behavior: 'smooth',
                    top: offsetTop
                });
                
                // Update URL without triggering scroll
                history.pushState(null, '', `#${heading.id}`);
                
                // Close TOC on mobile after navigation
                if (window.innerWidth <= 768) {
                    toggleToc();
                }
            });

            li.appendChild(a);
            tocList.appendChild(li);
        });

        // Highlight active section on scroll
        const tocLinks = tocList.querySelectorAll('a');
        
        function updateActiveLink() {
            let activeIndex = -1;
            
            // Check if we're at the top of the page
            if (window.scrollY < 100) {
                // Remove active class from all links
                tocLinks.forEach(link => link.classList.remove('active'));
                // Add active class to Index
                tocLinks[0].classList.add('active');
                return;
            }
            
            headings.forEach((heading, index) => {
                const rect = heading.getBoundingClientRect();
                if (rect.top <= 120) {
                    activeIndex = index;
                }
            });

            // Remove active class from all links
            tocLinks.forEach(link => link.classList.remove('active'));
            
            // Add active class to current section (offset by 1 for Index)
            if (activeIndex >= 0 && tocLinks[activeIndex + 1]) {
                tocLinks[activeIndex + 1].classList.add('active');
            }
        }

        // Throttled scroll listener
        let ticking = false;
        function onScroll() {
            if (!ticking) {
                requestAnimationFrame(() => {
                    updateActiveLink();
                    ticking = false;
                });
                ticking = true;
            }
        }

        window.addEventListener('scroll', onScroll);
        
        // Initial check
        updateActiveLink();
        
        // Handle resize events
        window.addEventListener('resize', function() {
            // Close TOC when switching to desktop view
            if (window.innerWidth > 768 && tocElement.classList.contains('visible')) {
                // Keep it open on larger screens
            }
        });
    });
</script>
