---
import Navbar from "../components/navbar.astro";
import Footer from "../components/footer.astro";
import Scripts from "../components/scripts.astro";

const { 
    title,
    description = "Personal blog of Marcos Reyes about technology, programming, IT solutions and personal experiences.",
    image = "/og-image.jpg",
    imageAlt = "AstronautMarkus Blog",
    author = "Marcos Reyes",
    publishDate,
    modifiedDate,
    canonical,
    noindex = false,
    type = "website",
    tags = []
} = Astro.props;

import "../css/global.css";

const siteUrl = import.meta.env.SITE_URL || "https://blog.astronautmarkus.dev";
const siteName = import.meta.env.SITE_NAME || "blog.astronautmarkus.dev";

const currentUrl = new URL(Astro.request.url);
const canonicalUrl = canonical || new URL(currentUrl.pathname, siteUrl).href;
const fullImageUrl = new URL(image, siteUrl).href;

const structuredData = {
    "@context": "https://schema.org",
    "@type": type === "article" ? "BlogPosting" : "WebSite",
    "headline": title,
    "description": description,
    "image": fullImageUrl,
    "author": {
        "@type": "Person",
        "name": author,
        "url": "https://astronautmarkus.dev"
    },
    "publisher": {
        "@type": "Organization",
        "name": siteName,
        "logo": {
            "@type": "ImageObject",
            "url": `${siteUrl}/logo.png`
        }
    },
    "url": canonicalUrl,
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": canonicalUrl
    },
    ...(publishDate && { "datePublished": publishDate }),
    ...(modifiedDate && { "dateModified": modifiedDate }),
    ...(tags.length > 0 && { "keywords": tags.join(", ") })
};
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        
        <title>{title}</title>
        <meta name="description" content={description} />
        <meta name="author" content={author} />
        {tags.length > 0 && <meta name="keywords" content={tags.join(", ")} />}
        {noindex && <meta name="robots" content="noindex, nofollow" />}
        
        <link rel="canonical" href={canonicalUrl} />
        
        <meta property="og:type" content={type} />
        <meta property="og:title" content={title} />
        <meta property="og:description" content={description} />
        <meta property="og:image" content={fullImageUrl} />
        <meta property="og:image:alt" content={imageAlt} />
        <meta property="og:url" content={canonicalUrl} />
        <meta property="og:site_name" content={siteName} />
        <meta property="og:locale" content="es_ES" />
        
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@astronautmarkus" />
        <meta name="twitter:creator" content="@astronautmarkus" />
        <meta name="twitter:title" content={title} />
        <meta name="twitter:description" content={description} />
        <meta name="twitter:image" content={fullImageUrl} />
        <meta name="twitter:image:alt" content={imageAlt} />

        <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/gh/devicons/devicon@latest/devicon.min.css" />

        
        {type === "article" && publishDate && (
            <meta property="article:published_time" content={publishDate} />
        )}
        {type === "article" && modifiedDate && (
            <meta property="article:modified_time" content={modifiedDate} />
        )}
        {type === "article" && (
            <meta property="article:author" content={author} />
        )}
        {type === "article" && tags.map((tag:any) => (
            <meta property="article:tag" content={tag} />
        ))}
        
        <link rel="icon" type="image/svg+xml" href="/favicon.jpg" />
        <link rel="icon" type="image/png" href="/favicon.jpg" />
        <link rel="apple-touch-icon" href="/favicon.jpg" />
        
        <meta name="theme-color" content="#3273dc" />
        <meta name="color-scheme" content="light" />
        
        <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />

        
        <style>
            html, body {
                height: 100%;
            }
            body {
                display: flex;
                flex-direction: column;
            }
            .main-content {
                flex: 1;
            }
        </style>
    </head>
    <body>
        
        <Navbar />

        <section class="section main-content">
            <div class="container">
                <article class="content">
                    <slot />
                </article>
            </div>
        </section>

        <Footer />

        <Scripts />
    </body>
</html>
